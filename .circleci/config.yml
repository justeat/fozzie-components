# version: 2.1 # use CircleCI 2.1
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  slack: circleci/slack@4.1.3

commands:
  set_deploy_key:
    description: Sets the ssh key for project access
    steps:
      - add_ssh_keys:
          fingerprints:
            - "0e:50:82:ad:81:17:a5:31:04:13:fd:6e:c7:72:c9:18"

  install_node_dependencies:
    description: Installs the node dependencies
    steps:
      - run: yarn install

  build_packages:
    description: Locally builds all packages in the monorepo
    steps:
      - run: # Check UI packages all build as expected
          name: Build Packages
          command: yarn build

executors:
  node:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.18.4-browsers # For latest available images check â€“ https://circleci.com/docs/2.0/docker-image-tags.json

jobs:

  working_directory: ~/repo

  build:
    executor: node
    environment:
      # required to prevent ENOMEM errors
      LERNA_ARGS: --concurrency 1
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
              - yarn-packages-{{ checksum "yarn.lock" }}
      - install_node_dependencies
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: # Run PR Checks
          name: Run PR Checks
          command: yarn danger ci
      - build_packages
      - run: # Lint packages
          name: Run Lint Tasks on Packages
          command: yarn lint
      - run: # Run Tests
          name: Run Unit / Integration Tests
          command: yarn test
      - run: # Install Component Test Dependencies
          name: Install Component Test Dependencies
          command: yarn global add @vue/cli @vue/cli-service-global
      - run: # Run Component UI Tests
          name: Run WebDriverIO Component / Accessibility Tests
          command: yarn test-component:chrome
      - store_artifacts:
          path: axe-violations/
      - run:
          name: Run Bundlewatch checks
          command: yarn bundlewatch
    
  notify:
    docker:
      - image: 'cimg/base:stable'
    steps:
      # Send slack notification on build fail using CircleCI template - https://github.com/CircleCI-Public/slack-orb/blob/master/src/message_templates/basic_fail_1.json
      - slack/notify:
          event: fail
          template: basic_fail_1
      # Send slack notification on build success using a custom template
      - slack/notify:
          event: pass
          custom: |
            {
              "text": "",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Your job *${CIRCLE_JOB}* succeeded ðŸŽ‰"
                  },
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Commiter*:\\n${CIRCLE_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*SHA*:\\n${CIRCLE_SHA1}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Mentions*:\\n${SLACK_PARAM_MENTIONS}"
                    }
                  ],
                  "accessory": {
                    "type": "image",
                    "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                    "alt_text": "CircleCI logo"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

  deploy-storybook:
    executor: node
    environment:
      # required to prevent ENOMEM errors
      LERNA_ARGS: --concurrency 1
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - install_node_dependencies
      - build_packages
      - run:
          name: Deploy
          command: yarn storybook:deploy --packages packages

  # Stopping until Circle CI credit issue is resolved
  # npm-publish:
  #   executor: node
  #   environment:
  #     # required to prevent ENOMEM errors
  #     LERNA_ARGS: --concurrency 1
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         name: Restore Yarn Package Cache
  #         keys:
  #           - yarn-packages-{{ checksum "yarn.lock" }}
  #     - install_node_dependencies
  #     - run:
  #         name: authenticate with npm
  #         command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > .npmrc
  #     - run:
  #         name: npm publish
  #         command: npm publish

workflows:
  version: 2

  build:
    jobs:
      - build:
          context: web-core
          filters:
            branches:
              ignore: 'gh-pages'
      - notify:
          requires:
            - build
          context: web-core
          filters:
            branches:
              ignore: 'gh-pages'

  # Stopping until Circle CI credit issue is resolved
  # npm-publish:
  #   jobs:
  #     - npm-publish:
  #         context: web-core
  #         filters:
  #           branches:
  #             only: 'master'

  deploy-storybook:
    jobs:
      - deploy-storybook:
          filters:
            branches:
              only: master
      - notify:
          context: web-core
          requires:
            - deploy-storybook
          filters:
            branches:
              only: master
